{"version":3,"sources":["../webpack:/opencc-action/lib/main.js","../webpack:/opencc-action/node_modules/@actions/core/lib/command.js","../webpack:/opencc-action/node_modules/@actions/core/lib/core.js","../webpack:/opencc-action/node_modules/@actions/core/lib/file-command.js","../webpack:/opencc-action/node_modules/@actions/core/lib/utils.js","../webpack:/opencc-action/node_modules/opencc/node/opencc.js","../webpack:/opencc-action/node_modules/opencc/build/Release/opencc.node","../webpack:/opencc-action/external \"fs\"","../webpack:/opencc-action/external \"os\"","../webpack:/opencc-action/external \"path\"","../webpack:/opencc-action/external \"util\"","../webpack:/opencc-action/webpack/bootstrap","../webpack:/opencc-action/webpack/runtime/compat","../webpack:/opencc-action/webpack/startup"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","core","__webpack_require__","util","fs","opencc_1","readFileAsync","promisify","readFile","readDirAsync","readdir","writeFileAsync","writeFile","getConfig","debug","input","getInput","output","config","handleFile","async","input_path","output_path","converter","then","data","convertPromise","toString","main","OpenCC","files","map","file","catch","e","info","message","setFailed","issue","issueCommand","os","utils_1","command","properties","cmd","Command","process","stdout","write","EOL","name","CMD_STRING","constructor","cmdStr","keys","length","first","key","val","escapeProperty","escapeData","s","toCommandValue","replace","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","apply","getState","saveState","group","endGroup","startGroup","notice","warning","error","isDebug","setCommandEcho","setOutput","getBooleanInput","getMultilineInput","addPath","setSecret","exportVariable","ExitCode","command_1","file_command_1","path","convertedVal","env","filePath","delimiter","commandValue","secret","inputPath","options","toUpperCase","required","Error","trimWhitespace","trim","inputs","split","filter","x","trueValue","falseValue","includes","TypeError","enabled","exitCode","Failure","toCommandProperties","fn","existsSync","appendFileSync","encoding","String","JSON","stringify","annotationProperties","title","line","startLine","endLine","col","startColumn","endColumn","bindingPath","ab","binding","assetsPath","configPath","module","require","__webpack_module_cache__","moduleId","cachedModule","threw","__webpack_modules__","__dirname","__webpack_exports__"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst util = __importStar(require(\"util\"));\nconst fs = __importStar(require(\"fs\"));\nconst opencc_1 = require(\"opencc\");\nconst readFileAsync = util.promisify(fs.readFile);\nconst readDirAsync = util.promisify(fs.readdir);\nconst writeFileAsync = util.promisify(fs.writeFile);\nconst getConfig = () => {\n    core.debug(\"Processing config\");\n    const input = {\n        input: core.getInput('input'),\n        output: core.getInput('output'),\n        config: core.getInput('config')\n    };\n    core.debug(`input: ${input.input}`);\n    core.debug(`output: ${input.output}`);\n    core.debug(`config: ${input.config}`);\n    return input;\n};\nconst handleFile = async (input_path, output_path, converter) => readFileAsync(input_path)\n    .then(data => converter.convertPromise(data.toString()))\n    .then(data => writeFileAsync(output_path, data));\nconst main = async () => {\n    const config = getConfig();\n    const converter = new opencc_1.OpenCC(config.config);\n    return await readDirAsync(config.input)\n        .then(files => files\n        .map(file => handleFile(`${config.input}/${file}`, `${config.output}/${file}`, converter)\n        .catch((e) => core.info(e.message)))).catch(() => handleFile(config.input, config.output, converter));\n};\nmain().catch((e) => {\n    core.setFailed(e.message);\n});\n//# sourceMappingURL=main.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map",null,"module.exports = __non_webpack_require__(__webpack_require__.ab + \"build/Release/opencc.node\")","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(109);\n"]}